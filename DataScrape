---
title: "NFL"
author: "Nick Citrone"
date: "February 10, 2016"
output: html_document
---

Loading Libraries:
```{r}
library(rvest)
library(plyr)

```

Functions:
```{r}
NFL_scrape = function(inp, x_pa='//*[@id="stats"]'){
  DF = inp %>%
  read_html() %>%
  html_nodes(xpath=x_pa) %>%
  html_table()
  DF = DF[[1]]
  DF = na.omit(DF)
  colnames(DF) = DF[1, ] # the first row will be the header
  DF = DF[-1, ]
  return(DF)
}



football_scrape = function(url_base, length, xpa='//*[@id="stats"]'){
  page_vec = c(0:length)
  page_vec = as.character(page_vec)
  url_end = "00"
  page_vector = page_vec
  for(i in 1:length(page_vec)){
    page_vector[i] = paste(url_base, page_vec[i],url_end, sep="")
  }
  df = NFL_scrape(page_vector[1])
  for(i in 2:length(page_vector)){
    yourl = page_vector[i]
    temp = NFL_scrape(yourl)
    df = rbind(df, temp)
    print(page_vec[i])
  }
  colnames(df)[2] <- "Name"
  df = na.omit(df)
  df = df[df$Name != "Player",]
  df = df[df$Name != "",]
  return(df)
}

makenumeric = function(data, from){
  len = ncol(data)
  x = from
  for(i in x:len){
    data[,i] = as.numeric(data[,i])
  }
  return(data)
}

```
Importing NFL QBs:

```{r}
page_vector = c(0:5)
page_vector = as.character(page_vector)

url_base <- "http://www.pro-football-reference.com/play-index/pgl_finder.cgi?request=1&match=combined&player_id=&year_min=2000&year_max=2015&season_start=1&season_end=-1&game_time=&age_min=0&age_max=99&league_id=NFL&team_id=&opp_id=&game_type=R&game_num_min=0&game_num_max=99&week_num_min=0&week_num_max=99&game_day_of_week=&game_month=&game_location=&game_result=&is_active=&handedness=&is_hof=&c1stat=pass_att&c1comp=gt&c1val=1&c2stat=&c2comp=gt&c2val=&c3stat=&c3comp=gt&c3val=&c4stat=&c4comp=gt&c4val=&c5comp=&c6comp=&c5gtlt=lt&c6mult=1.0&order_by=pass_att&order_by_asc=&pos=&offset="
url_end <- "00"


for(i in 1:length(page_vector)){
  page_vector[i] = paste(url_base, page_vector[i],url_end, sep="")
}

NFL_pass = NFL_scrape(page_vector[1])
for(i in 2:length(page_vector)){
  yourl = page_vector[i]
  temp = NFL_scrape(yourl)
  NFL_pass = rbind(NFL_pass, temp)
}
colnames(NFL_pass)[2] <- "Name"
NFL_pass_clean = na.omit(NFL_pass)
NFL_pass_clean = NFL_pass_clean[NFL_pass_clean$Name != "",]
NFL_pass = NFL_pass_clean
```

Importing College QB Data:
```{r}
page_vector = c(0:20)
page_vector = as.character(page_vector)

url_base_college <- "http://www.sports-reference.com/cfb/play-index/pgl_finder.cgi?request=1&match=combined&year_min=&year_max=&conf_id=&school_id=&opp_id=&game_type=&game_num_min=&game_num_max=&game_location=&game_result=&c1stat=pass_att&c1comp=gt&c1val=1&c2stat=&c2comp=gt&c2val=&c3stat=&c3comp=gt&c3val=&c4stat=&c4comp=gt&c4val=&order_by=pass_att&order_by_asc=&offset="
url_end <- "00"


for(i in 1:length(page_vector)){
  page_vector[i] = paste(url_base_college, page_vector[i],url_end, sep="")
}

CFB_pass = NFL_scrape(page_vector[1])
for(i in 2:length(page_vector)){
  yourl = page_vector[i]
  temp = NFL_scrape(yourl)
  CFB_pass = rbind(CFB_pass, temp)
}
colnames(CFB_pass)[2] <- "Name"
CFB_pass_clean = na.omit(CFB_pass)
CFB_pass_clean = CFB_pass_clean[CFB_pass_clean$Name != "Player",]
CFB_pass = CFB_pass_clean

# //*[@id="stats"]

length(CFB_pass_clean$Name[which(duplicated(CFB_pass_clean$Name)==TRUE)])

```


```{r}

NFL_pass = makenumeric(NFL_pass, 7)
CFB_pass = makenumeric(CFB_pass, 6)

```

Importing NFL Receiving Stats:
```{r}
WR_base = "http://www.pro-football-reference.com/play-index/pgl_finder.cgi?request=1&match=combined&player_id=&year_min=2000&year_max=2015&season_start=1&season_end=-1&game_time=&age_min=0&age_max=99&league_id=&team_id=&opp_id=&game_type=R&game_num_min=0&game_num_max=99&week_num_min=0&week_num_max=99&game_day_of_week=&game_month=&game_location=&game_result=&is_active=&handedness=&is_hof=&c1stat=rec&c1comp=gt&c1val=1&c2stat=&c2comp=gt&c2val=&c3stat=&c3comp=gt&c3val=&c4stat=&c4comp=gt&c4val=&c5comp=&c6comp=&c5gtlt=lt&c6mult=1.0&order_by=rec&order_by_asc=&pos=&offset="

WR_length = 20

NFL_rec = football_scrape(url_base = WR_base, length = WR_length)
NFL_rec = makenumeric(NFL_rec, 7)
```

Importing NFL Rushing stats:
```{r}
RB_base = "http://www.pro-football-reference.com/play-index/pgl_finder.cgi?request=1&match=combined&player_id=&year_min=2000&year_max=2015&season_start=1&season_end=-1&game_time=&age_min=0&age_max=99&league_id=&team_id=&opp_id=&game_type=R&game_num_min=0&game_num_max=99&week_num_min=0&week_num_max=99&game_day_of_week=&game_month=&game_location=&game_result=&is_active=&handedness=&is_hof=&c1stat=rush_att&c1comp=gt&c1val=1&c2stat=&c2comp=gt&c2val=&c3stat=&c3comp=gt&c3val=&c4stat=&c4comp=gt&c4val=&c5comp=&c6comp=&c5gtlt=lt&c6mult=1.0&order_by=rush_att&order_by_asc=&pos=&offset="

RB_length = 15
NFL_rush = football_scrape(url_base = RB_base, length = RB_length)
NFL_rush = makenumeric(NFL_rush, 7)


```

Importing CFB Rushing Stats:
```{r}
CRB_base = "http://www.sports-reference.com/cfb/play-index/pgl_finder.cgi?request=1&match=combined&year_min=2000&year_max=2015&conf_id=&school_id=&opp_id=&game_type=&game_num_min=&game_num_max=&game_location=&game_result=&c1stat=rush_att&c1comp=gt&c1val=1&c2stat=&c2comp=gt&c2val=&c3stat=&c3comp=gt&c3val=&c4stat=&c4comp=gt&c4val=&order_by=rush_att&order_by_asc=&offset="

CRB_length = 100


CFB_rush = football_scrape(url_base = CRB_base, length = CRB_length)
CBF_rush = makenumeric(NFL_rush, 7)
```

Importing CFB Receiving Stats:
```{r}
CWR_base = "http://www.sports-reference.com/cfb/play-index/pgl_finder.cgi?request=1&match=combined&year_min=2000&year_max=2015&conf_id=&school_id=&opp_id=&game_type=&game_num_min=&game_num_max=&game_location=&game_result=&c1stat=rec&c1comp=gt&c1val=1&c2stat=&c2comp=gt&c2val=&c3stat=&c3comp=gt&c3val=&c4stat=&c4comp=gt&c4val=&order_by=rec_yds&order_by_asc=&offset="

CWR_length = 131


CFB_WR = football_scrape(url_base = CWR_base, length = CWR_length)
```

*Writing Tables*
```{r}
write.table(CFB_pass, file="CFB_Pass.csv")
write.table(NFL_pass, file="NFL_Pass.csv")
write.table(NFL_rec, file="NFL_rec.csv")
write.table(NFL_rush, file = "NFL_rush.csv")
write.table(CFB_rush, file = "CFB_rush.csv")
write.table(CFB_WR, file = "CFB_rec.csv")
```


*Creating Merge Columns*
```{r}
NFL_pass$Merge = paste(NFL_pass$Name, NFL_pass$From, NFL_pass$To, sep="")
NFL_rec$Merge =  paste(NFL_rec$Name, NFL_rec$From, NFL_rec$To, sep="")
NFL_rush$Merge = paste(NFL_rush$Name, NFL_rush$From, NFL_rush$To, sep="")

CFB_pass$Merge = paste(CFB_pass$Name, CFB_pass$School, CFB_pass$To, sep="")
CFB_rush$Merge = paste(CFB_rush$Name, CFB_rush$School,CFB_rush$To, sep="")
CFB_WR$Merge = paste(CFB_WR$Name, CFB_WR$School, CFB_WR$To, sep="")
```

*Checking Duplicates*
```{r}
#Checking Duplicates for NFL Passing
NFL_pass$Dup = duplicated(NFL_pass$Merge)
NFL_pass$Name[which(NFL_pass$Dup == TRUE)]

#Checking Duplicates for NFL Receiving
NFL_rec$Dup = duplicated(NFL_rec$Merge)
NFL_rec$Name[which(NFL_rec$Dup == TRUE)]

#Checking Duplicates for NFL Rushing
NFL_rush$Dup = duplicated(NFL_rush$Merge)
NFL_rush$Name[which(NFL_rush$Dup == TRUE)]


#Combining Name + Wins has removed all duplicates from the NFL data.

CFB_pass$Dup = duplicated(CFB_pass$Merge)
CFB_pass$Name[which(CFB_pass$Dup == TRUE)]

CFB_rush$Dup = duplicated(CFB_rush$Merge)
CFB_rush$Name[which(CFB_rush$Dup == TRUE)]

CFB_rush$Yds[which(CFB_rush$Dup == TRUE)]

CFB_WR$Dup = duplicated(CFB_WR$Merge)
CFB_WR$Name[which(CFB_WR$Dup == TRUE)]

#Combining Name + School + To Year has removed all duplicates.  Ready to begin Merging
```

*Merging the Data*
```{r}
NFL_temp = merge(NFL_pass, NFL_rush, by="Merge", all=TRUE)
NFL = merge(NFL_temp, NFL_rec, by="Merge", all=TRUE)

CFB_temp = merge(CFB_pass, CFB_rush, by="Merge", all=TRUE)
CFB = merge(CFB_temp, CFB_WR, by="Merge", all=TRUE)

#Combining Like-Columns:

for(i in 1:nrow(NFL)){
  if(is.na(NFL$Name[i]) == TRUE){
    NFL$Name[i] = NFL$Name.x[i]
    NFL$From[i] = NFL$From.x[i]
    NFL$To[i] = NFL$To.x[i]
    NFL$Tm[i] = NFL$Tm.x[i]
    NFL$G[i] = NFL$G.x[i]
    NFL$W[i] = NFL$W.x[i]
    NFL$L[i] = NFL$L.x[i]
    NFL$T[i] = NFL$T.x[i]
    if(is.na(NFL$Name[i]) == TRUE){
      NFL$Name[i] = NFL$Name.y[i]
      NFL$From[i] = NFL$From.y[i]
      NFL$To[i] = NFL$To.y[i]
      NFL$Tm[i] = NFL$Tm.y[i]
      NFL$G[i] = NFL$G.y[i]
      NFL$W[i] = NFL$W.y[i]
      NFL$L[i] = NFL$L.y[i]
      NFL$T[i] = NFL$T.y[i]
    }
  }
}

#Re-organizing Data Frame
NFL_fixed = NFL[,c(40, 41, 42, 44, 45, 46, 47, 48, 49, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 35, 36, 37, 50, 51, 52, 53, 54, 55, 56, 1)]
NFL = NFL_fixed
colnames(NFL) = c("Name", "Pro_start", "Pro_end", "Tm", "G", "W", "L", "T", "W-L", "Cmp.n", "Pass.att.n", "Cmp.per.n", "Pass.yds.n","Pass.td.n", "Int.n", "Rate.n", "Pass.ypa.n", "Pass.adypa.n", "Rush.att.n", "Rush.yds.n", "Rush.ypc.n", "Rush.td.n", "Targets.n", "Rec.n", "Rec.yds.n", "Rec.ypr.n", "Rec.td.n", "Ctchper.n", "Rec.ypt.n", "Merge")

#Combining Like CFB Columns
for(i in 1:nrow(CFB)){
  if(is.na(CFB$Name[i]) == TRUE){
    CFB$Name[i] = CFB$Name.x[i]
    CFB$From[i] = CFB$From.x[i]
    CFB$To[i] = CFB$To.x[i]
    CFB$School[i] = CFB$School.x[i]
    if(is.na(CFB$Name[i]) == TRUE){
      CFB$Name[i] = CFB$Name.y[i]
      CFB$From[i] = CFB$From.y[i]
      CFB$To[i] = CFB$To.y[i]
      CFB$School[i] = CFB$School.y[i]
    }
  }
}

# sum(is.na(CFB$Name)) == 0

CFB_fixed = CFB[,c(26, 27, 28, 29, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 30, 31, 32, 33, 1)]
CFB = CFB_fixed
colnames(CFB) = c("Name", "Col_start", "Col_end", "School", "Cmp.c", "Pass.att.c", "Cmp.per.c", "Pass.yds.c", "Pass.td.c", "Int.c", "Rush.att.c", "Rush.yds.c", "Rush.ypc.c", "Rush.td.c", "Rec.c", "Rec.yds.c", "Rec.ypr.c", "Rec.td.c", "Merge")

write.table(CFB, file="CFB.csv")
write.table(NFL, file="NFL.csv")

#Correcting the Double-Smiths
which(NFL$Name %in% "Alex Smith")
NFL = NFL[-c(49,50),]
NFL[49,10:18] = NA

NFL$Pro_start = as.numeric(NFL$Pro_start)
NFL$Merge2 = paste(NFL$Name, (NFL$Pro_start - 1),sep="")
CFB$Merge2 = paste(CFB$Name, CFB$Col_end, sep="")

NFL$Dup = duplicated(NFL$Merge2)
NFL$Name[which(NFL$Dup == TRUE)]

CFB$Dup = duplicated(CFB$Merge2)
CFB$Merge2[which(CFB$Dup == TRUE)]

#Clearing Duplicates
Football = merge(NFL, CFB, by = "Merge2", all=TRUE)
which(Football$Merge.y %in% "Andre JohnsonOklahoma State2002")
which(Football$Merge.y %in% "Nick FolesArizona2011")
which(Football$Merge.y %in%"Cam NewtonAuburn2010")
which(Football$Merge.y %in%"Chris JohnsonSouthern Mississippi2007")
Football_clean = Football[-c(662, 14343, 2859, 3601),]

write.table(Football_clean, file="Football.csv")


```

